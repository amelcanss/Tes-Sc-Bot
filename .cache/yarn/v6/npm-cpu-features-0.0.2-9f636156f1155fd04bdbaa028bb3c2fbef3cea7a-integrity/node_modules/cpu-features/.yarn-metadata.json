{
  "manifest": {
    "name": "cpu-features",
    "version": "0.0.2",
    "author": {
      "name": "Brian White",
      "email": "mscdex@mscdex.net"
    },
    "description": "A simple binding to Google's cpu_features library for obtaining information about installed CPU(s)",
    "main": "./lib/index",
    "dependencies": {
      "nan": "^2.14.1"
    },
    "scripts": {
      "install": "node-gyp rebuild",
      "test": "node test/test.js"
    },
    "engines": {
      "node": ">=8.0.0"
    },
    "keywords": [
      "cpu",
      "detect",
      "detection",
      "features"
    ],
    "licenses": [
      {
        "type": "MIT",
        "url": "https://github.com/mscdex/cpu-features/raw/master/LICENSE"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/mscdex/cpu-features.git"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-cpu-features-0.0.2-9f636156f1155fd04bdbaa028bb3c2fbef3cea7a-integrity/node_modules/cpu-features/package.json",
    "readmeFilename": "README.md",
    "readme": "\nDescription\n===========\n\nA simple [node.js](https://nodejs.org) binding to [cpu_features](https://github.com/google/cpu_features) for obtaining information about installed CPU(s).\n\n\nRequirements\n============\n\n* [node.js](http://nodejs.org/) -- v8.0.0 or newer\n* An appropriate build environment -- see [node-gyp's documentation](https://github.com/nodejs/node-gyp/blob/master/README.md)\n* CMake -- any modern version (v3.14+ required for Windows and must be available in %PATH%)\n\n\nInstall\n=======\n\n    npm install cpu-features\n\n\nExample\n=======\n\n```js\n  // Generally it's a good idea to just call this once and\n  // reuse the result since `cpu-features` does not cache\n  // the result itself.\n  const features = require('cpu-features')();\n\n  console.log(features);\n  // example output:\n  // { arch: 'x86',\n  //   brand: 'Intel(R) Core(TM) i7-3770K CPU @ 3.50GHz',\n  //   family: 6,\n  //   model: 58,\n  //   stepping: 9,\n  //   uarch: 'INTEL_IVB',\n  //   flags:\n  //    { fpu: true,\n  //      tsc: true,\n  //      cx8: true,\n  //      clfsh: true,\n  //      mmx: true,\n  //      aes: true,\n  //      erms: true,\n  //      f16c: true,\n  //      sse: true,\n  //      sse2: true,\n  //      sse3: true,\n  //      ssse3: true,\n  //      sse4_1: true,\n  //      sse4_2: true,\n  //      avx: true,\n  //      pclmulqdq: true,\n  //      cx16: true,\n  //      popcnt: true,\n  //      rdrnd: true,\n  //      ss: true } }\n```\n",
    "license": "MIT",
    "licenseText": "Copyright Brian White. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/cpu-features/-/cpu-features-0.0.2.tgz#9f636156f1155fd04bdbaa028bb3c2fbef3cea7a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/cpu-features/-/cpu-features-0.0.2.tgz",
    "hash": "9f636156f1155fd04bdbaa028bb3c2fbef3cea7a",
    "integrity": "sha512-/2yieBqvMcRj8McNzkycjW2v3OIUOibBfd2dLEJ0nWts8NobAxwiyw9phVNS6oDL8x8tz9F7uNVFEVpJncQpeA==",
    "registry": "npm",
    "packageName": "cpu-features",
    "cacheIntegrity": "sha512-/2yieBqvMcRj8McNzkycjW2v3OIUOibBfd2dLEJ0nWts8NobAxwiyw9phVNS6oDL8x8tz9F7uNVFEVpJncQpeA== sha1-n2NhVvEVX9BL26oCi7PC++886no="
  },
  "registry": "npm",
  "hash": "9f636156f1155fd04bdbaa028bb3c2fbef3cea7a"
}