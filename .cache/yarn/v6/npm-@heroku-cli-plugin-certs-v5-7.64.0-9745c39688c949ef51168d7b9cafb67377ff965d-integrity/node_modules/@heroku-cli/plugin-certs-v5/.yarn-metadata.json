{
  "manifest": {
    "name": "@heroku-cli/plugin-certs-v5",
    "description": "heroku ssl plugin",
    "version": "7.64.0",
    "author": {
      "name": "Ransom Briggs rbriggs@heroku.com"
    },
    "bugs": {
      "url": "https://github.com/heroku/cli/issues"
    },
    "cli-engine": {
      "bin": "heroku",
      "commands": "./commands",
      "topics": {
        "certs": {
          "description": "a topic for the ssl plugin"
        }
      },
      "repositoryPrefix": "<%- repo %>/blob/v<%- version %>/packages/certs-v5/<%- commandPath %>"
    },
    "dependencies": {
      "date-fns": "^1.29.0",
      "heroku-cli-util": "^8.0.11",
      "inquirer": "^6.2.2",
      "lodash": "^4.17.13",
      "psl": "^1.1.29"
    },
    "devDependencies": {
      "@oclif/dev-cli": "^1.21.3",
      "@oclif/plugin-legacy": "^1.2.0",
      "chai": "^4.2.0",
      "chai-as-promised": "^7.1.1",
      "lolex": "^3.1.0",
      "mocha": "^5.2.0",
      "nock": "^9.3.3",
      "nyc": "^13.2.0",
      "proxyquire": "^2.1.0",
      "sinon": "^2.3.6",
      "sinon-chai": "^2.14.0"
    },
    "files": [
      "oclif.manifest.json",
      "index.js",
      "lib",
      "commands"
    ],
    "homepage": "https://github.com/heroku/cli/tree/master/packages/certs-v5",
    "keywords": [
      "heroku-plugin"
    ],
    "license": "ISC",
    "repository": {
      "type": "git",
      "url": "https://github.com/heroku/cli.git"
    },
    "scripts": {
      "postpublish": "rm oclif.manifest.json",
      "prepack": "oclif-dev manifest",
      "test": "nyc mocha",
      "version": "oclif-dev readme && git add README.md"
    },
    "gitHead": "d856db950b3e71a452a82c3d88b97f40254b5462",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@heroku-cli-plugin-certs-v5-7.64.0-9745c39688c949ef51168d7b9cafb67377ff965d-integrity/node_modules/@heroku-cli/plugin-certs-v5/package.json",
    "readmeFilename": "README.md",
    "readme": "heroku-certs\n===========\n\n[![Build Status](https://travis-ci.org/heroku/heroku-certs.svg?branch=master)](https://travis-ci.org/heroku/heroku-certs)\n\n## Commands\n\n<!-- commands -->\n* [`heroku certs`](#heroku-certs)\n* [`heroku certs:add CRT KEY`](#heroku-certsadd-crt-key)\n* [`heroku certs:auto`](#heroku-certsauto)\n* [`heroku certs:auto:disable`](#heroku-certsautodisable)\n* [`heroku certs:auto:enable`](#heroku-certsautoenable)\n* [`heroku certs:auto:refresh`](#heroku-certsautorefresh)\n* [`heroku certs:chain`](#heroku-certschain)\n* [`heroku certs:generate DOMAIN`](#heroku-certsgenerate-domain)\n* [`heroku certs:info`](#heroku-certsinfo)\n* [`heroku certs:key`](#heroku-certskey)\n* [`heroku certs:remove`](#heroku-certsremove)\n* [`heroku certs:update CRT KEY`](#heroku-certsupdate-crt-key)\n\n## `heroku certs`\n\nlist SSL certificates for an app\n\n```\nUSAGE\n  $ heroku certs\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/index.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/index.js)_\n\n## `heroku certs:add CRT KEY`\n\nadd an SSL certificate to an app\n\n```\nUSAGE\n  $ heroku certs:add CRT KEY\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --bypass             bypass the trust chain completion step\n\nDESCRIPTION\n  Note: certificates with PEM encoding are also valid\n\nEXAMPLES\n  $ heroku certs:add example.com.crt example.com.key\n\n       If you require intermediate certificates, refer to this article on merging certificates to get a complete chain:\n       https://help.salesforce.com/s/articleView?id=000333504&type=1\n```\n\n_See code: [commands/certs/add.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/add.js)_\n\n## `heroku certs:auto`\n\nshow ACM status for an app\n\n```\nUSAGE\n  $ heroku certs:auto\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --wait               watch ACM status and display the status when complete\n```\n\n_See code: [commands/certs/auto/index.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/auto/index.js)_\n\n## `heroku certs:auto:disable`\n\ndisable ACM for an app\n\n```\nUSAGE\n  $ heroku certs:auto:disable\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/auto/disable.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/auto/disable.js)_\n\n## `heroku certs:auto:enable`\n\nenable ACM status for an app\n\n```\nUSAGE\n  $ heroku certs:auto:enable\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --wait               watch ACM status and exit when complete\n```\n\n_See code: [commands/certs/auto/enable.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/auto/enable.js)_\n\n## `heroku certs:auto:refresh`\n\nrefresh ACM for an app\n\n```\nUSAGE\n  $ heroku certs:auto:refresh\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/auto/refresh.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/auto/refresh.js)_\n\n## `heroku certs:chain`\n\nprint an ordered & complete chain for a certificate\n\n```\nUSAGE\n  $ heroku certs:chain\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/chain.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/chain.js)_\n\n## `heroku certs:generate DOMAIN`\n\ngenerate a key and a CSR or self-signed certificate\n\n```\nUSAGE\n  $ heroku certs:generate DOMAIN\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --area=area          sub-country area (state, province, etc.) of owner\n  --city=city          city of owner\n  --country=country    country of owner, as a two-letter ISO country code\n  --keysize=keysize    RSA key size in bits (default: 2048)\n  --now                do not prompt for any owner information\n  --owner=owner        name of organization certificate belongs to\n  --selfsigned         generate a self-signed certificate instead of a CSR\n  --subject=subject    specify entire certificate subject\n\nDESCRIPTION\n  Generate a key and certificate signing request (or self-signed certificate)\n  for an app. Prompts for information to put in the certificate unless --now\n  is used, or at least one of the --subject, --owner, --country, --area, or\n  --city options is specified.\n\nEXAMPLES\n  $ heroku certs:generate example.com\n```\n\n_See code: [commands/certs/generate.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/generate.js)_\n\n## `heroku certs:info`\n\nshow certificate information for an SSL certificate\n\n```\nUSAGE\n  $ heroku certs:info\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --endpoint=endpoint  endpoint to check info on\n  --name=name          name to check info on\n  --show-domains       show associated domains\n```\n\n_See code: [commands/certs/info.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/info.js)_\n\n## `heroku certs:key`\n\nprint the correct key for the given certificate\n\n```\nUSAGE\n  $ heroku certs:key\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  You must pass one single certificate, and one or more keys.\n  The first key that signs the certificate will be printed back.\n\nEXAMPLES\n  $ heroku certs:key example.com.crt example.com.key\n```\n\n_See code: [commands/certs/key.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/key.js)_\n\n## `heroku certs:remove`\n\nremove an SSL certificate from an app\n\n```\nUSAGE\n  $ heroku certs:remove\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --endpoint=endpoint  endpoint to remove\n  --name=name          name to remove\n```\n\n_See code: [commands/certs/remove.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/remove.js)_\n\n## `heroku certs:update CRT KEY`\n\nupdate an SSL certificate on an app\n\n```\nUSAGE\n  $ heroku certs:update CRT KEY\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --bypass             bypass the trust chain completion step\n  --endpoint=endpoint  endpoint to update\n  --name=name          name to update\n\nDESCRIPTION\n  Note: certificates with PEM encoding are also valid\n\nEXAMPLES\n  $ heroku certs:update example.com.crt example.com.key\n\n       If you require intermediate certificates, refer to this article on merging certificates to get a complete chain:\n       https://help.salesforce.com/s/articleView?id=000333504&type=1\n```\n\n_See code: [commands/certs/update.js](https://github.com/heroku/cli/blob/v7.64.0/packages/certs-v5/commands/certs/update.js)_\n<!-- commandsstop -->\n",
    "licenseText": "The ISC License (ISC)\n\nCopyright Â© Heroku 2017\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@heroku-cli/plugin-certs-v5/-/plugin-certs-v5-7.64.0.tgz#9745c39688c949ef51168d7b9cafb67377ff965d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@heroku-cli/plugin-certs-v5/-/plugin-certs-v5-7.64.0.tgz",
    "hash": "9745c39688c949ef51168d7b9cafb67377ff965d",
    "integrity": "sha512-0FvVEWFyV9frwONn6XHlUzA+LNwYaOKcC9P494gbcdS4dlissO5m1bft78q5+4uArqA6FTZfqiysKoGqrr1BnQ==",
    "registry": "npm",
    "packageName": "@heroku-cli/plugin-certs-v5",
    "cacheIntegrity": "sha512-0FvVEWFyV9frwONn6XHlUzA+LNwYaOKcC9P494gbcdS4dlissO5m1bft78q5+4uArqA6FTZfqiysKoGqrr1BnQ== sha1-l0XDlojJSe9RFo17nK+2c3f/ll0="
  },
  "registry": "npm",
  "hash": "9745c39688c949ef51168d7b9cafb67377ff965d"
}