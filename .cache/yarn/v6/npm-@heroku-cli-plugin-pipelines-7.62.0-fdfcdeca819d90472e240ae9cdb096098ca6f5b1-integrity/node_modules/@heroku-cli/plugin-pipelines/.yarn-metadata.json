{
  "manifest": {
    "name": "@heroku-cli/plugin-pipelines",
    "version": "7.62.0",
    "author": {
      "name": "James Martinez @jmar910"
    },
    "bugs": {
      "url": "https://github.com/heroku/cli/issues"
    },
    "dependencies": {
      "@heroku-cli/color": "^1.1.14",
      "@heroku-cli/command": "^8.4.1",
      "@heroku-cli/schema": "^1.0.25",
      "@oclif/command": "^1",
      "@oclif/config": "^1",
      "@oclif/errors": "^1.3.4",
      "cli-ux": "^5.5.1",
      "heroku-cli-util": "^8.0.11",
      "http-call": "^5.2.4",
      "inquirer": "^7.0.0",
      "lodash.keyby": "^4.6.0",
      "lodash.sortby": "^4.7.0",
      "node-fetch": "^2.6.1",
      "validator": "^13.7.0"
    },
    "devDependencies": {
      "@oclif/dev-cli": "^1",
      "@oclif/plugin-help": "^2",
      "@oclif/test": "^1",
      "@types/chai": "^4",
      "@types/got": "^9.6.7",
      "@types/lodash.keyby": "^4.6.6",
      "@types/lodash.sortby": "^4.7.6",
      "@types/mocha": "^5",
      "@types/node": "^10",
      "chai": "^4",
      "debug": "^4.1.1",
      "eslint": "^6.7.2",
      "eslint-config-oclif": "^3.1.0",
      "eslint-config-oclif-typescript": "^0.1.0",
      "globby": "^8",
      "mocha": "^5",
      "nock": "^10.0.6",
      "nyc": "^13",
      "sinon": "^7.4.1",
      "ts-node": "^8",
      "tslib": "^1",
      "typescript": "3.7.5"
    },
    "engines": {
      "node": ">=10.0.0"
    },
    "files": [
      "/lib",
      "/oclif.manifest.json",
      "/yarn.lock"
    ],
    "homepage": "https://github.com/heroku/cli",
    "keywords": [
      "heroku-plugin"
    ],
    "license": "MIT",
    "oclif": {
      "commands": "./lib/commands",
      "bin": "heroku",
      "devPlugins": [
        "@oclif/plugin-help"
      ],
      "topics": {
        "pipelines": {
          "description": "manage pipelines"
        },
        "reviewapps": {
          "description": "manage reviewapps in pipelines"
        }
      }
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/heroku/cli.git"
    },
    "scripts": {
      "lint": "eslint . --ext .ts --config .eslintrc",
      "postpack": "rm -f oclif.manifest.json",
      "prepack": "rm -rf lib && tsc -b && oclif-dev manifest && oclif-dev readme",
      "pretest": "tsc -p test --noEmit",
      "test": "nyc --extension .ts mocha \"test/**/*.test.ts\"",
      "posttest": "yarn lint",
      "version": "oclif-dev readme && git add README.md"
    },
    "gitHead": "13db7c5e684c5c44682a5115b9a29632a46fb69c",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@heroku-cli-plugin-pipelines-7.62.0-fdfcdeca819d90472e240ae9cdb096098ca6f5b1-integrity/node_modules/@heroku-cli/plugin-pipelines/package.json",
    "readmeFilename": "README.md",
    "readme": "@heroku-cli/plugin-pipelines\n============================\n\n\n\n[![oclif](https://img.shields.io/badge/cli-oclif-brightgreen.svg)](https://oclif.io)\n[![Version](https://img.shields.io/npm/v/@heroku-cli/plugin-pipelines.svg)](https://npmjs.org/package/@heroku-cli/plugin-pipelines)\n[![CircleCI](https://circleci.com/gh/heroku/cli/tree/master.svg?style=shield)](https://circleci.com/gh/heroku/cli/tree/master)\n[![Appveyor CI](https://ci.appveyor.com/api/projects/status/github/heroku/cli?branch=master&svg=true)](https://ci.appveyor.com/project/heroku/cli/branch/master)\n[![Downloads/week](https://img.shields.io/npm/dw/@heroku-cli/plugin-pipelines.svg)](https://npmjs.org/package/@heroku-cli/plugin-pipelines)\n[![License](https://img.shields.io/npm/l/@heroku-cli/plugin-pipelines.svg)](https://github.com/heroku/cli/blob/master/package.json)\n\n<!-- toc -->\n* [Usage](#usage)\n* [Commands](#commands)\n<!-- tocstop -->\n# Usage\n<!-- usage -->\n```sh-session\n$ npm install -g @heroku-cli/plugin-pipelines\n$ heroku COMMAND\nrunning command...\n$ heroku (-v|--version|version)\n@heroku-cli/plugin-pipelines/7.62.0 darwin-x64 node-v16.14.0\n$ heroku --help [COMMAND]\nUSAGE\n  $ heroku COMMAND\n...\n```\n<!-- usagestop -->\n# Commands\n<!-- commands -->\n* [`heroku pipelines`](#heroku-pipelines)\n* [`heroku pipelines:add PIPELINE`](#heroku-pipelinesadd-pipeline)\n* [`heroku pipelines:connect NAME`](#heroku-pipelinesconnect-name)\n* [`heroku pipelines:create [NAME]`](#heroku-pipelinescreate-name)\n* [`heroku pipelines:destroy PIPELINE`](#heroku-pipelinesdestroy-pipeline)\n* [`heroku pipelines:diff`](#heroku-pipelinesdiff)\n* [`heroku pipelines:info PIPELINE`](#heroku-pipelinesinfo-pipeline)\n* [`heroku pipelines:open PIPELINE`](#heroku-pipelinesopen-pipeline)\n* [`heroku pipelines:promote`](#heroku-pipelinespromote)\n* [`heroku pipelines:remove`](#heroku-pipelinesremove)\n* [`heroku pipelines:rename PIPELINE NAME`](#heroku-pipelinesrename-pipeline-name)\n* [`heroku pipelines:setup [NAME] [REPO]`](#heroku-pipelinessetup-name-repo)\n* [`heroku pipelines:transfer OWNER`](#heroku-pipelinestransfer-owner)\n* [`heroku pipelines:update`](#heroku-pipelinesupdate)\n* [`heroku reviewapps:disable`](#heroku-reviewappsdisable)\n* [`heroku reviewapps:enable`](#heroku-reviewappsenable)\n\n## `heroku pipelines`\n\nlist pipelines you have access to\n\n```\nUSAGE\n  $ heroku pipelines\n\nOPTIONS\n  --json  output in json format\n\nEXAMPLE\n  $ heroku pipelines\n```\n\n_See code: [src/commands/pipelines/index.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/index.ts)_\n\n## `heroku pipelines:add PIPELINE`\n\nadd this app to a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:add PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -s, --stage=stage    stage of first app in pipeline\n\nDESCRIPTION\n  The app and pipeline names must be specified.\n  The stage of the app will be guessed based on its name if not specified.\n\nEXAMPLE\n  $ heroku pipelines:add my-pipeline -a my-app -s production\n```\n\n_See code: [src/commands/pipelines/add.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/add.ts)_\n\n## `heroku pipelines:connect NAME`\n\nconnect a github repo to an existing pipeline\n\n```\nUSAGE\n  $ heroku pipelines:connect NAME\n\nARGUMENTS\n  NAME  name of pipeline\n\nOPTIONS\n  -r, --repo=repo  (required) the GitHub repository to connect to\n\nEXAMPLE\n  $ heroku pipelines:connect my-pipeline -r githuborg/reponame\n```\n\n_See code: [src/commands/pipelines/connect.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/connect.ts)_\n\n## `heroku pipelines:create [NAME]`\n\ncreate a new pipeline\n\n```\nUSAGE\n  $ heroku pipelines:create [NAME]\n\nARGUMENTS\n  NAME  name of pipeline (defaults to basename of the app)\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -s, --stage=stage    stage of first app in pipeline\n  -t, --team=team      the team which will own the apps\n\nDESCRIPTION\n  An existing app must be specified as the first app in the pipeline.\n     The pipeline name will be inferred from the app name if not specified.\n     The stage of the app will be guessed based on its name if not specified.\n     The pipeline owner will be the user creating the pipeline if not specified with -t for teams or -o for orgs.\n\nEXAMPLES\n  $ heroku pipelines:create -a my-app-staging\n  $ heroku pipelines:create my-pipeline -a my-app-staging\n```\n\n_See code: [src/commands/pipelines/create.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/create.ts)_\n\n## `heroku pipelines:destroy PIPELINE`\n\ndestroy a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:destroy PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nEXAMPLE\n  $ heroku pipelines:destroy my-pipeline\n```\n\n_See code: [src/commands/pipelines/destroy.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/destroy.ts)_\n\n## `heroku pipelines:diff`\n\ncompares the latest release of this app to its downstream app(s)\n\n```\nUSAGE\n  $ heroku pipelines:diff\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nEXAMPLE\n  $ heroku pipelines:diff -a my-app-staging\n```\n\n_See code: [src/commands/pipelines/diff.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/diff.ts)_\n\n## `heroku pipelines:info PIPELINE`\n\nshow list of apps in a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:info PIPELINE\n\nARGUMENTS\n  PIPELINE  pipeline to show list of apps for\n\nOPTIONS\n  --json  output in json format\n\nEXAMPLE\n  $ heroku pipelines:info my-pipeline\n```\n\n_See code: [src/commands/pipelines/info.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/info.ts)_\n\n## `heroku pipelines:open PIPELINE`\n\nopen a pipeline in dashboard\n\n```\nUSAGE\n  $ heroku pipelines:open PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nEXAMPLE\n  $ heroku pipelines:open my-pipeline\n```\n\n_See code: [src/commands/pipelines/open.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/open.ts)_\n\n## `heroku pipelines:promote`\n\npromote the latest release of this app to its downstream app(s)\n\n```\nUSAGE\n  $ heroku pipelines:promote\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -t, --to=to          comma separated list of apps to promote to\n\nEXAMPLE\n  $ heroku pipelines:promote -a my-app-staging\n```\n\n_See code: [src/commands/pipelines/promote.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/promote.ts)_\n\n## `heroku pipelines:remove`\n\nremove this app from its pipeline\n\n```\nUSAGE\n  $ heroku pipelines:remove\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nEXAMPLE\n  $ heroku pipelines:remove -a my-app\n```\n\n_See code: [src/commands/pipelines/remove.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/remove.ts)_\n\n## `heroku pipelines:rename PIPELINE NAME`\n\nrename a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:rename PIPELINE NAME\n\nARGUMENTS\n  PIPELINE  current name of pipeline\n  NAME      new name of pipeline\n\nEXAMPLE\n  $ heroku pipelines:rename my-pipeline new-pipeline-name\n```\n\n_See code: [src/commands/pipelines/rename.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/rename.ts)_\n\n## `heroku pipelines:setup [NAME] [REPO]`\n\nbootstrap a new pipeline with common settings and create a production and staging app (requires a fully formed app.json in the repo)\n\n```\nUSAGE\n  $ heroku pipelines:setup [NAME] [REPO]\n\nARGUMENTS\n  NAME  name of pipeline\n  REPO  a GitHub repository to connect the pipeline to\n\nOPTIONS\n  -t, --team=team  the team to assign pipeline ownership to (defaults to current user)\n  -y, --yes        accept all default settings without prompting\n\nEXAMPLE\n  $ heroku pipelines:setup my-pipeline githuborg/reponame -t my-team\n```\n\n_See code: [src/commands/pipelines/setup.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/setup.ts)_\n\n## `heroku pipelines:transfer OWNER`\n\ntransfer ownership of a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:transfer OWNER\n\nARGUMENTS\n  OWNER  the owner to transfer the pipeline to\n\nOPTIONS\n  -c, --confirm=confirm\n  -p, --pipeline=pipeline  (required) name of pipeline\n\nEXAMPLES\n  $ heroku pipelines:transfer admin@example.com -p my-pipeline\n  $ heroku pipelines:transfer admin-team -p my-pipeline\n```\n\n_See code: [src/commands/pipelines/transfer.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/transfer.ts)_\n\n## `heroku pipelines:update`\n\nupdate the app's stage in a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:update\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -s, --stage=stage    (required) new stage of app\n\nEXAMPLE\n  $ heroku pipelines:update -s staging -a my-app\n```\n\n_See code: [src/commands/pipelines/update.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/pipelines/update.ts)_\n\n## `heroku reviewapps:disable`\n\ndisable review apps and/or settings on an existing pipeline\n\n```\nUSAGE\n  $ heroku reviewapps:disable\n\nOPTIONS\n  -a, --app=app            parent app used by review apps\n  -p, --pipeline=pipeline  (required) name of pipeline\n  -r, --remote=remote      git remote of app to use\n  --no-autodeploy          disable autodeployments\n  --no-autodestroy         disable automatically destroying review apps\n  --no-wait-for-ci         disable wait for CI\n\nEXAMPLE\n  $ heroku reviewapps:disable -p my-pipeline -a my-app --no-autodeploy\n```\n\n_See code: [src/commands/reviewapps/disable.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/reviewapps/disable.ts)_\n\n## `heroku reviewapps:enable`\n\nenable review apps and/or settings on an existing pipeline\n\n```\nUSAGE\n  $ heroku reviewapps:enable\n\nOPTIONS\n  -a, --app=app            parent app used by review apps\n  -p, --pipeline=pipeline  (required) name of pipeline\n  -r, --remote=remote      git remote of app to use\n  --autodeploy             autodeploy the review app\n  --autodestroy            autodestroy the review app\n  --wait-for-ci            wait for CI to pass before deploying\n\nEXAMPLE\n  $ heroku reviewapps:enable -p my-pipeline -a my-app --autodeploy --autodestroy\n```\n\n_See code: [src/commands/reviewapps/enable.ts](https://github.com/heroku/cli/blob/v7.62.0/src/commands/reviewapps/enable.ts)_\n<!-- commandsstop -->\n",
    "description": "<!-- usage --> ```sh-session $ npm install -g @heroku-cli/plugin-pipelines $ heroku COMMAND running command... $ heroku (-v|--version|version) @heroku-cli/plugin-pipelines/7.62.0 darwin-x64 node-v16.14.0 $ heroku --help [COMMAND] USAGE $ heroku COMMAND ... ``` <!-- usagestop --> # Commands <!-- commands --> * [`heroku pipelines`](#heroku-pipelines) * [`heroku pipelines:add PIPELINE`](#heroku-pipelinesadd-pipeline) * [`heroku pipelines:connect NAME`](#heroku-pipelinesconnect-name) * [`heroku pipelines:create [NAME]`](#heroku-pipelinescreate-name) * [`heroku pipelines:destroy PIPELINE`](#heroku-pipelinesdestroy-pipeline) * [`heroku pipelines:diff`](#heroku-pipelinesdiff) * [`heroku pipelines:info PIPELINE`](#heroku-pipelinesinfo-pipeline) * [`heroku pipelines:open PIPELINE`](#heroku-pipelinesopen-pipeline) * [`heroku pipelines:promote`](#heroku-pipelinespromote) * [`heroku pipelines:remove`](#heroku-pipelinesremove) * [`heroku pipelines:rename PIPELINE NAME`](#heroku-pipelinesrename-pipeline-name) * [`heroku pipelines:setup [NAME] [REPO]`](#heroku-pipelinessetup-name-repo) * [`heroku pipelines:transfer OWNER`](#heroku-pipelinestransfer-owner) * [`heroku pipelines:update`](#heroku-pipelinesupdate) * [`heroku reviewapps:disable`](#heroku-reviewappsdisable) * [`heroku reviewapps:enable`](#heroku-reviewappsenable)",
    "licenseText": "The ISC License (ISC)\n\nCopyright © Heroku 2017\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@heroku-cli/plugin-pipelines/-/plugin-pipelines-7.62.0.tgz#fdfcdeca819d90472e240ae9cdb096098ca6f5b1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@heroku-cli/plugin-pipelines/-/plugin-pipelines-7.62.0.tgz",
    "hash": "fdfcdeca819d90472e240ae9cdb096098ca6f5b1",
    "integrity": "sha512-4ctgK+/zQGbsar1NkGxSN0aOnxWbdf4OpzSSLkbaWqPUsBMEMDBc5iDn4tukeC1t+T/ay4bxCkvlH6KYwXa72w==",
    "registry": "npm",
    "packageName": "@heroku-cli/plugin-pipelines",
    "cacheIntegrity": "sha512-4ctgK+/zQGbsar1NkGxSN0aOnxWbdf4OpzSSLkbaWqPUsBMEMDBc5iDn4tukeC1t+T/ay4bxCkvlH6KYwXa72w== sha1-/fzeyoGdkEcuJArpzbCWCYym9bE="
  },
  "registry": "npm",
  "hash": "fdfcdeca819d90472e240ae9cdb096098ca6f5b1"
}