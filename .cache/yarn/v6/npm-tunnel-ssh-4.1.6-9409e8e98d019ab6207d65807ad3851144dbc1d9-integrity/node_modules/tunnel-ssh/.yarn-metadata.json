{
  "manifest": {
    "name": "tunnel-ssh",
    "version": "4.1.6",
    "description": "Easy extendable SSH tunnel",
    "main": "index.js",
    "scripts": {
      "test": "mocha && eslint ."
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/agebrock/tunnel-ssh"
    },
    "keywords": [
      "tunnel",
      "ssh",
      "mysql",
      "develop",
      "net"
    ],
    "author": {
      "name": "Christoph Hagenbrock",
      "email": "christoph.hagenbrock@googlemail.com"
    },
    "license": "MIT",
    "dependencies": {
      "debug": "2.6.9",
      "lodash.defaults": "^4.1.0",
      "ssh2": "1.4.0"
    },
    "devDependencies": {
      "chai": "3.5.0",
      "eslint": "^3.2.2",
      "eslint-config-xo": "^0.17.0",
      "mocha": "^3.5.3"
    },
    "eslintConfig": {
      "extends": "xo",
      "env": {
        "mocha": true
      },
      "rules": {
        "indent": [
          "error",
          4
        ]
      }
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-tunnel-ssh-4.1.6-9409e8e98d019ab6207d65807ad3851144dbc1d9-integrity/node_modules/tunnel-ssh/package.json",
    "readmeFilename": "README.md",
    "readme": "Tunnel-SSH\n==========\n\nOne to connect them all !\n\n![Tunnel-SSH Logo](http://i.imgur.com/I5PRnDD.jpg)\n\nTunnel-ssh is based on the fantastic [ssh2](https://github.com/mscdex/ssh2) library by Brian White.\nTrouble ? Please study the ssh2 configuration.\n\n### Latest Relese 4.1.3\n\n## Release notes\n* Closing sshconnections correctly thx @actionshrimp\n* Improved readme\n* Updated modules\n\nSpecial thanks to\n@vweevers and @dickeyxxx\n\n\n### Related projects\n* [If you don't want to wrap a tunnel around your code: inject-tunnel-ssh](https://github.com/agebrock/inject-tunnel-ssh)\n* [If you need it the other way around: reverse-tunnel-ssh](https://github.com/agebrock/reverse-tunnel-ssh)\n\n### Integration\nBy default tunnel-ssh will close the tunnel after a client disconnects, so your cli tools should work in the same way, they do if you connect directly.\nIf you need the tunnel to stay open, use the \"keepAlive:true\" option within\nthe configuration.\n\n\n```js\n\n    var config = {\n      ...\n      keepAlive:true\n    };\n\n    var tnl = tunnel(config, function(error, tnl){\n          yourClient.connect();\n          yourClient.disconnect();\n          setTimeout(function(){\n            // you only need to close the tunnel by yourself if you set the\n            // keepAlive:true option in the configuration !\n            tnl.close();\n          },2000);\n      });\n\n    // you can also close the tunnel from here...\n    setTimeout(function(){\n      tnl.close();\n    },2000);\n\n```\n\n\n## Understanding the configuration\n\n1. A local server listening for connections to forward via ssh\nDescription: This is where you bind your interface.\nProperties:\n** localHost (default is '127.0.0.1')\n** localPort (default is dstPort)\n\n\n2. The ssh configuration\nDescription: The host you want to use as ssh-tunnel server.\nProperties:\n** host\n** port (22)\n** username\n** ...\n\n\n3. The destination host configuration (based on the ssh host)\nImagine you just connected to The host you want to connect to. (via host:port)\nnow that server connects requires a target to tunnel to.\nProperties:\n** dstHost (localhost)\n** dstPort\n\n\n### Config example\n\n```js\n\n    var config = {\n      username:'root',\n      password:'secret',\n      host:sshServer,\n      port:22,\n      dstHost:destinationServer,\n      dstPort:27017,\n      localHost:'127.0.0.1',\n      localPort: 27000\n    };\n\n    var tunnel = require('tunnel-ssh');\n    tunnel(config, function (error, server) {\n      //....\n    });\n```\n#### Sugar configuration\n\ntunnel-ssh assumes that you want to map the same port on a remote machine to your localhost using the ssh-server on the remote machine.\n\n\n```js\n\n    var config = {\n      username:'root',\n      dstHost:'remotehost.with.sshserver.com',\n      dstPort:27017,\n      privateKey:require(fs).readFileSync('/path/to/key'),\n      passphrase:'secret'\n    };\n\n```\n\n#### More configuration options\ntunnel-ssh pipes the configuration direct into the ssh2 library so every config option provided by ssh2 still works.\n[ssh2 configuration](https://github.com/mscdex/ssh2#client-methods)\n\n\n#### catching errors:\n```js\n    var tunnel = require('tunnel-ssh');\n    //map port from remote 3306 to localhost 3306\n    var server = tunnel({host: '172.16.0.8', dstPort: 3306}, function (error, server) {\n       if(error){\n        //catch configuration and startup errors here.\n       }\n    });\n\n    // Use a listener to handle errors outside the callback\n    server.on('error', function(err){\n        console.error('Something bad happened:', err);\n    });\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Christoph Hagenbrock <christoph.hagenbrock@googlemail.com> (agebrock.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tunnel-ssh/-/tunnel-ssh-4.1.6.tgz#9409e8e98d019ab6207d65807ad3851144dbc1d9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tunnel-ssh/-/tunnel-ssh-4.1.6.tgz",
    "hash": "9409e8e98d019ab6207d65807ad3851144dbc1d9",
    "integrity": "sha512-y7+x+T3F3rkx2Zov5Tk9DGfeEBVAdWU3A/91E0Dk5rrZ/VFIlpV2uhhRuaISJUdyG0N+Lcp1fXZMXz+ovPt5vA==",
    "registry": "npm",
    "packageName": "tunnel-ssh",
    "cacheIntegrity": "sha512-y7+x+T3F3rkx2Zov5Tk9DGfeEBVAdWU3A/91E0Dk5rrZ/VFIlpV2uhhRuaISJUdyG0N+Lcp1fXZMXz+ovPt5vA== sha1-lAno6Y0BmrYgfWWAetOFEUTbwdk="
  },
  "registry": "npm",
  "hash": "9409e8e98d019ab6207d65807ad3851144dbc1d9"
}