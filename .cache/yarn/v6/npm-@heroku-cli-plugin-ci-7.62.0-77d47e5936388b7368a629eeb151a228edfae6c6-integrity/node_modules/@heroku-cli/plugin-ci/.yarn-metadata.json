{
  "manifest": {
    "name": "@heroku-cli/plugin-ci",
    "description": "Heroku CLI plugin for Heroku CI",
    "version": "7.62.0",
    "author": {
      "name": "Raúl Barroso @raulb"
    },
    "bugs": {
      "url": "https://github.com/heroku/cli/issues"
    },
    "dependencies": {
      "@heroku-cli/color": "^1.1.14",
      "@heroku-cli/command": "^8.4.1",
      "@oclif/command": "^1.5.11",
      "@oclif/config": "^1.12.10",
      "ansi-escapes": "3.2.0",
      "async-file": "^2.0.2",
      "cli-ux": "^4.9.3",
      "debug": "^4.1.1",
      "fs-extra": "^7.0.1",
      "github-url-to-object": "^4.0.4",
      "got": "^9.6.0",
      "inquirer": "^6.2.2",
      "phoenix": "^1.4.3",
      "tmp": "^0.0.33",
      "tslib": "^1.9.3",
      "uuid": "^8.3.0",
      "validator": "^13.7.0",
      "ws": "^6.2.1"
    },
    "devDependencies": {
      "@fancy-test/nock": "^0.1.1",
      "@heroku-cli/schema": "^1.0.25",
      "@oclif/dev-cli": "^1.21.3",
      "@oclif/plugin-help": "^2.1.6",
      "@oclif/test": "^1.2.4",
      "@types/chai": "^4.1.7",
      "@types/inquirer": "7.3.0",
      "@types/mocha": "^5.2.6",
      "@types/nock": "^9.3.1",
      "@types/node": "^10.12.24",
      "@types/phoenix": "^1.4.0",
      "@types/uuid": "^8.3.0",
      "@types/validator": "^10.9.0",
      "@types/ws": "^6.0.1",
      "chai": "^4.2.0",
      "eslint": "^6.7.2",
      "eslint-config-oclif": "^3.1.0",
      "eslint-config-oclif-typescript": "^0.1.0",
      "globby": "^9.0.0",
      "mocha": "^5",
      "nock": "^9.6.1",
      "nyc": "^13.2.0",
      "ts-node": "^8.0.2",
      "typescript": "3.7.5"
    },
    "engines": {
      "node": ">=10.0.0"
    },
    "files": [
      "/lib",
      "/npm-shrinkwrap.json",
      "/oclif.manifest.json",
      "/yarn.lock"
    ],
    "homepage": "https://github.com/heroku/cli",
    "keywords": [
      "oclif-plugin"
    ],
    "license": "MIT",
    "oclif": {
      "commands": "./lib/commands",
      "bin": "heroku",
      "devPlugins": [
        "@oclif/plugin-help"
      ],
      "repositoryPrefix": "<%- repo %>/blob/v<%- version %>/packages/ci/<%- commandPath %>"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/heroku/cli.git"
    },
    "scripts": {
      "lint": "eslint . --ext .ts --config .eslintrc",
      "postpack": "rm -f oclif.manifest.json npm-shrinkwrap.json",
      "prepack": "rm -rf lib && tsc && oclif-dev manifest && oclif-dev readme",
      "prepare": "rm -rf lib && tsc",
      "pretest": "tsc -p test --noEmit",
      "test": "nyc mocha --forbid-only \"test/**/*.test.ts\"",
      "posttest": "yarn lint",
      "version": "oclif-dev readme && git add README.md"
    },
    "gitHead": "13db7c5e684c5c44682a5115b9a29632a46fb69c",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@heroku-cli-plugin-ci-7.62.0-77d47e5936388b7368a629eeb151a228edfae6c6-integrity/node_modules/@heroku-cli/plugin-ci/package.json",
    "readmeFilename": "README.md",
    "readme": "@heroku-cli/plugin-ci\n=====================\n\nHeroku CLI plugin for Heroku CI\n\n[![oclif](https://img.shields.io/badge/cli-oclif-brightgreen.svg)](https://oclif.io)\n[![Version](https://img.shields.io/npm/v/@heroku-cli/plugin-ci.svg)](https://npmjs.org/package/@heroku-cli/plugin-ci)\n\n[![CircleCI](https://circleci.com/gh/heroku/cli/tree/master.svg?style=shield)](https://circleci.com/gh/heroku/cli/tree/master)\n\n[![Appveyor CI](https://ci.appveyor.com/api/projects/status/github/heroku/cli?branch=master&svg=true)](https://ci.appveyor.com/project/heroku/cli/branch/master)\n[![Downloads/week](https://img.shields.io/npm/dw/@heroku-cli/plugin-ci.svg)](https://npmjs.org/package/@heroku-cli/plugin-ci)\n[![License](https://img.shields.io/npm/l/@heroku-cli/plugin-ci.svg)](https://github.com/heroku/cli/blob/master/package.json)\n\n<!-- toc -->\n* [Usage](#usage)\n* [Commands](#commands)\n<!-- tocstop -->\n# Usage\n<!-- usage -->\n```sh-session\n$ npm install -g @heroku-cli/plugin-ci\n$ heroku COMMAND\nrunning command...\n$ heroku (-v|--version|version)\n@heroku-cli/plugin-ci/7.62.0 darwin-x64 node-v16.14.0\n$ heroku --help [COMMAND]\nUSAGE\n  $ heroku COMMAND\n...\n```\n<!-- usagestop -->\n# Commands\n<!-- commands -->\n* [`heroku ci`](#heroku-ci)\n* [`heroku ci:info TEST-RUN`](#heroku-ciinfo-test-run)\n* [`heroku ci:last`](#heroku-cilast)\n* [`heroku ci:rerun [NUMBER]`](#heroku-cirerun-number)\n* [`heroku ci:run`](#heroku-cirun)\n\n## `heroku ci`\n\ndisplay the most recent CI runs for the given pipeline\n\n```\nUSAGE\n  $ heroku ci\n\nOPTIONS\n  -a, --app=app            app name\n  -p, --pipeline=pipeline  name of pipeline\n  --json                   output in json format\n  --watch                  keep running and watch for new and update tests\n\nEXAMPLE\n  $ heroku ci --app murmuring-headland-14719\n```\n\n_See code: [src/commands/ci/index.ts](https://github.com/heroku/cli/blob/v7.62.0/packages/ci/src/commands/ci/index.ts)_\n\n## `heroku ci:info TEST-RUN`\n\nshow the status of a specific test run\n\n```\nUSAGE\n  $ heroku ci:info TEST-RUN\n\nOPTIONS\n  -a, --app=app            app name\n  -p, --pipeline=pipeline  name of pipeline\n  --node=node              the node number to show its setup and output\n\nEXAMPLE\n  $ heroku ci:info 1288 --app murmuring-headland-14719\n```\n\n_See code: [src/commands/ci/info.ts](https://github.com/heroku/cli/blob/v7.62.0/packages/ci/src/commands/ci/info.ts)_\n\n## `heroku ci:last`\n\nlooks for the most recent run and returns the output of that run\n\n```\nUSAGE\n  $ heroku ci:last\n\nOPTIONS\n  -a, --app=app            app name\n  -p, --pipeline=pipeline  name of pipeline\n  --node=node              the node number to show its setup and output\n\nEXAMPLE\n  $ heroku ci:last --pipeline=my-pipeline --node 100\n```\n\n_See code: [src/commands/ci/last.ts](https://github.com/heroku/cli/blob/v7.62.0/packages/ci/src/commands/ci/last.ts)_\n\n## `heroku ci:rerun [NUMBER]`\n\nrerun tests against current directory\n\n```\nUSAGE\n  $ heroku ci:rerun [NUMBER]\n\nOPTIONS\n  -a, --app=app            app name\n  -p, --pipeline=pipeline  name of pipeline\n\nEXAMPLE\n  $ heroku ci:rerun 985 --app murmuring-headland-14719\n```\n\n_See code: [src/commands/ci/rerun.ts](https://github.com/heroku/cli/blob/v7.62.0/packages/ci/src/commands/ci/rerun.ts)_\n\n## `heroku ci:run`\n\nrun tests against current directory\n\n```\nUSAGE\n  $ heroku ci:run\n\nOPTIONS\n  -a, --app=app            app name\n  -p, --pipeline=pipeline  name of pipeline\n\nEXAMPLE\n  $ heroku ci:run --app murmuring-headland-14719\n```\n\n_See code: [src/commands/ci/run.ts](https://github.com/heroku/cli/blob/v7.62.0/packages/ci/src/commands/ci/run.ts)_\n<!-- commandsstop -->\n* [`heroku ci:info`](#heroku-ci-info)\n* [`heroku ci:last`](#heroku-ci-last)\n* [`heroku ci:run`](#heroku-ci-run)\n* [`heroku ci:rerun`](#heroku-ci-rerun)\n\n## `heroku ci:info`\n\nShows the information for a particular ci run on a pipeline.\n\n```\nUSAGE\n  $ heroku ci:info 555 --pipeline=my-pipeline # 555 is the test number\n```\n\n## `heroku ci:last`\n\nShows the information for the last run for a given pipeline.\n\n```\nUSAGE\n  $ heroku ci:last --pipeline=my-pipeline\n```\n\n## `heroku ci:run`\n\nRun this from within your repo directory to trigger a test agains the current branch and commit.\n\n```\nUSAGE\n  $ heroku ci:run --pipeline=my-pipeline\n```\n\n## `heroku ci:rerun`\n\nRe-run a previous test run. If no test run number is provided, the most recent test run will be re-run.\n\n```\nUSAGE\n  $ heroku ci:rerun 555 --pipeline=my-pipeline  # 555 is the test number\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Raúl Barroso @raulb\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@heroku-cli/plugin-ci/-/plugin-ci-7.62.0.tgz#77d47e5936388b7368a629eeb151a228edfae6c6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@heroku-cli/plugin-ci/-/plugin-ci-7.62.0.tgz",
    "hash": "77d47e5936388b7368a629eeb151a228edfae6c6",
    "integrity": "sha512-3wh9DBapfQEoAgQu8CtmeunS2hRTjEZHLQsBWK29hFB4VDffU+G7DDTB3vnRIOXhIJjJCUORyFJJTc2Lg+IzVw==",
    "registry": "npm",
    "packageName": "@heroku-cli/plugin-ci",
    "cacheIntegrity": "sha512-3wh9DBapfQEoAgQu8CtmeunS2hRTjEZHLQsBWK29hFB4VDffU+G7DDTB3vnRIOXhIJjJCUORyFJJTc2Lg+IzVw== sha1-d9R+WTY4i3NopinusVGiKO365sY="
  },
  "registry": "npm",
  "hash": "77d47e5936388b7368a629eeb151a228edfae6c6"
}